CREATE BRANCHGROUP
/*
	// rotate object has composited transformation matrix
	rotate = new Transform3D();
	tempRotate = new Transform3D();

        rotate.rotX(Math.PI/4.0d);
	tempRotate.rotY(Math.PI/5.0d);
        rotate.mul(tempRotate);

	TransformGroup objRotate = new TransformGroup(rotate);

	// Create the transform group node and initialize it to the
	// identity.  Enable the TRANSFORM_WRITE capability so that
	// our behavior code can modify it at runtime.  Add it to the
	// root of the subgraph.
        
	objSpin = new TransformGroup();
	objSpin.setCapability(TransformGroup.ALLOW_TRANSFORM_WRITE);

	objRoot.addChild(objRotate);
	objRotate.addChild(objSpin);
 
	// Create a simple shape leaf node, add it to the scene graph.
	// ColorCube is a Convenience Utility class
	//objSpin.addChild(new ColorCube(0.1));
        
        // Creamos una esfera de radio 0.5

        //crearEsfera();
        
        // Creamos el fondo
        
        crearSoporteTextura();
        
        crearMasImagenes();
                */



EVENTOS    



@Override
    public void keyTyped(KeyEvent e) {
  
        char key = e.getKeyChar();
        
        if(this.tcamara == null){
            this.vcamara    = new Vector3d();
            this.tcamara    = new Transform3D();
            //Making it the same as used
            camara.getTransform(tcamara);
            tcamara.get(vcamara);
        }
        switch(e.getKeyChar()){
            case 'a':
                //moves camera to the left
                vcamara.z -= JPanelCanvas3D.MOVESPEED;
            break;   
            case 'd':
                //moves camera to the right
                vcamara.z += JPanelCanvas3D.MOVESPEED;
            break;   
                
            case 'z':
                //moves camera to the left
                vcamara.y -= JPanelCanvas3D.MOVESPEED;
            break;   
            case 'x':
                //moves camera to the right
                vcamara.y += JPanelCanvas3D.MOVESPEED;
            break;   
        }
            tcamara.set(vcamara);
            
            camara.setTransform(tcamara);
        
    
        
        if(key == 's'){           
            
            rotate.rotX(Math.toRadians(x));
           // tempRotate.rotY(Math.PI/y);
            //rotate.mul(tempRotate);
            
            x += 5;
            y += 0.5f;

           // objSpin.setTransform(rotate);
            tg_esfera.setTransform(rotate);
            
        }
        
        else if(key == 'w'){
            
           /* rotate.rotX(0.05f);
            
            tg.setTransform(rotate);
            */
        }
}

    
    public void mouseDragged(MouseEvent e) {
      if(this.tcamara == null){
            this.vcamara    = new Vector3d();
            this.tcamara    = new Transform3D();
            //Making it the same as used
            camara.getTransform(tcamara);
            tcamara.get(vcamara);
        }
      
      System.out.print("AS");
    }

    @Override
    public void keyPressed(KeyEvent e) {
    }

    @Override
    public void keyReleased(KeyEvent e) {
    }

    @Override
    public void mouseClicked(MouseEvent e) {
       //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mousePressed(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseReleased(MouseEvent e) {
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseEntered(MouseEvent e) {
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseExited(MouseEvent e) {
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }